- name: Create service account for Spark
  user: name={{ spark.user }}
        system=yes
        shell={{ spark.user_shell }}
        state=present
        groups="{{ spark.user_groups | join(',') }}"

- name: Add "{{ default_username }}" to group spark
  user:
    name: "{{ default_username }}"
    groups: spark
    append: yes

- name: set spark fact
  set_fact: spark_installed=True

- name: define number of spark workers
  set_fact: number_of_workers="{{ groups['nodes'] | length | int }}"

- name: create install directory
  file:
    path: "{{ install_dir }}/{{ spark.spark_install_dir }}"
    state: directory
#    owner: "{{ spark.user }}"
#    group: "{{ spark.user }}"
#  become: true

- name: check for spark stop-all script
  stat:
    path: sbin/stop-all.sh
  register: stop_all

- name: stop spark
  shell: "sbin/stop-all.sh"
  args:
      chdir: "{{ install_dir}}/{{ spark.spark_install_dir }}"
  ignore_errors: yes
  when: inventory_hostname in groups['master'] and
        stop_all.stat.exists == True

- debug:
     msg: "Downloading Spark from: {{ spark.download_location }}/{{ spark.spark_archive }}"

- name: download spark
  get_url: 
    url: "{{ spark.download_location }}/{{ spark.spark_archive }}" 
    dest: "{{ install_temp_dir }}/{{ spark.spark_archive }}"
  register: get_url_result
  until: get_url_result is succeeded
  retries: "{{ download_retries }}"
  delay: 10

- name: unarchive to the install directory
  unarchive:
    src: "{{ install_temp_dir }}/{{ spark.spark_archive }}"
    dest: "{{ install_dir }}/{{ spark.spark_install_dir }}"
    remote_src: yes
    extra_opts: 
      - --strip-components=1

- name: create spark working directory
  file:
    path: "{{ spark.working_dir }}"
    state: directory
#    owner: "{{ spark.user }}"
#    group: "{{ spark.user }}"
#  become: true

- name: set spark-env.sh
  template: src="spark-env-sh.j2" dest="{{ install_dir }}/{{ spark.spark_install_dir }}/conf/spark-env.sh"

- name: set spark-defaults.conf
  template: src="spark-defaults-conf.j2" dest="{{ install_dir}}/{{ spark.spark_install_dir }}/conf/spark-defaults.conf"

- name: set slaves
  template: src="slaves.j2" dest="{{ install_dir}}/{{ spark.spark_install_dir }}/conf/slaves"

# Environment setup.
- name: add spark profile to startup
  template:
    src: spark-profile.sh.j2
    dest: /etc/profile.d/spark-profile.sh
    mode: 0644

- name: Change group and permissions on spark directory
  file:
    path: "{{ install_dir }}/{{ spark.spark_install_dir }}"
    state: directory
    recurse: yes
    group: "{{ default_groupname }}"
    mode: 'g+w'

